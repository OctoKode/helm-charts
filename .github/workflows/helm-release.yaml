# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: helm-release

permissions: {}

on:
  push:
    tags:
      - 'v*.*.*'
      - '*-v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.13.0

      - name: Install chart-releaser
        run: |
          curl -sSL https://github.com/helm/chart-releaser/releases/download/v1.6.1/chart-releaser_1.6.1_linux_amd64.tar.gz | tar xz
          sudo mv cr /usr/local/bin/cr

      - name: Package and release charts
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create .cr-release-packages if it doesn't exist
          mkdir -p .cr-release-packages
          
          # Package all charts
          for chart in charts/*; do
            if [ -d "$chart" ]; then
              echo "Packaging $chart..."
              helm package "$chart" --destination .cr-release-packages
            fi
          done
          
          # Upload chart packages to GitHub releases
          cr upload -o "${{ github.repository_owner }}" -r "${{ github.event.repository.name }}" -c "$(git rev-parse HEAD)" --skip-existing
          
          # Ensure gh-pages branch has an index.yaml
          git fetch origin gh-pages || true
          
          # Stash any local changes before switching branches
          git stash --include-untracked || true
          
          if git show-ref --verify --quiet refs/remotes/origin/gh-pages; then
            git checkout gh-pages
            git pull origin gh-pages
          else
            git checkout --orphan gh-pages
            git rm -rf . || true
          fi
          
          if [ ! -f index.yaml ]; then
            echo "Creating initial index.yaml"
            echo "apiVersion: v1" > index.yaml
            echo "entries: {}" >> index.yaml
            echo "generated: \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"" >> index.yaml
            git add index.yaml
            git commit -m "Initialize index.yaml" || true
            git push origin gh-pages
          fi
          
          # Return to the tag
          git checkout "${GITHUB_REF#refs/tags/}"
          
          # Update index and push to gh-pages
          mkdir -p .cr-index
          cr index -o "${{ github.repository_owner }}" -r "${{ github.event.repository.name }}" -c "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}" -i .cr-index/index.yaml --push
