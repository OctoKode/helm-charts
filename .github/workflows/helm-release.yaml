# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: helm-release

permissions: {}

on:
  push:
    tags:
      - 'v*.*.*'
      - '*-v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.13.0

      - name: Install chart-releaser
        run: |
          curl -sSL https://github.com/helm/chart-releaser/releases/download/v1.6.1/chart-releaser_1.6.1_linux_amd64.tar.gz | tar xz
          sudo mv cr /usr/local/bin/cr

      - name: Package and release charts
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create .cr-release-packages if it doesn't exist
          mkdir -p .cr-release-packages
          
          # Package all charts
          for chart in charts/*; do
            if [ -d "$chart" ]; then
              echo "Packaging $chart..."
              helm package "$chart" --destination .cr-release-packages
            fi
          done
          
          # Upload chart packages to GitHub releases
          cr upload -o "${{ github.repository_owner }}" -r "${{ github.event.repository.name }}" -c "$(git rev-parse HEAD)" --skip-existing
          
          # Ensure gh-pages branch has an index.yaml
          git fetch origin gh-pages || true
          
          # Stash any local changes before switching branches
          git stash --include-untracked || true
          
          if git show-ref --verify --quiet refs/remotes/origin/gh-pages; then
            git checkout gh-pages
            git pull origin gh-pages
          else
            git checkout --orphan gh-pages
            git rm -rf . || true
          fi
          
          if [ ! -f index.yaml ]; then
            echo "Creating initial index.yaml"
            echo "apiVersion: v1" > index.yaml
            echo "entries: {}" >> index.yaml
            echo "generated: \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"" >> index.yaml
            git add index.yaml
            git commit -m "Initialize index.yaml" || true
            git push origin gh-pages
          fi
          
          # Create index.html if it doesn't exist
          if [ ! -f index.html ]; then
            echo "Creating index.html landing page"
            echo '<!DOCTYPE html>' > index.html
            echo '<html lang="en">' >> index.html
            echo '<head>' >> index.html
            echo '    <meta charset="UTF-8">' >> index.html
            echo '    <meta name="viewport" content="width=device-width, initial-scale=1.0">' >> index.html
            echo '    <title>OctoKode Helm Charts</title>' >> index.html
            echo '    <style>' >> index.html
            echo '        body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif; line-height: 1.6; max-width: 900px; margin: 0 auto; padding: 20px; color: #333; }' >> index.html
            echo '        h1 { color: #2c3e50; border-bottom: 3px solid #3498db; padding-bottom: 10px; }' >> index.html
            echo '        h2 { color: #34495e; margin-top: 30px; }' >> index.html
            echo '        code { background: #f4f4f4; padding: 2px 6px; border-radius: 3px; }' >> index.html
            echo '        pre { background: #f4f4f4; padding: 15px; border-radius: 5px; overflow-x: auto; }' >> index.html
            echo '    </style>' >> index.html
            echo '</head>' >> index.html
            echo '<body>' >> index.html
            echo '    <h1>ðŸš€ OctoKode Helm Charts</h1>' >> index.html
            echo '    <p>Welcome to the OctoKode Helm Charts repository.</p>' >> index.html
            echo '    <h2>ðŸ“¦ Usage</h2>' >> index.html
            echo '    <p>Add this Helm repository:</p>' >> index.html
            echo '    <pre><code>helm repo add octokode https://octokode.github.io/helm-charts' >> index.html
            echo 'helm repo update</code></pre>' >> index.html
            echo '    <p>Search for available charts:</p>' >> index.html
            echo '    <pre><code>helm search repo octokode</code></pre>' >> index.html
            echo '    <p>Install a chart:</p>' >> index.html
            echo '    <pre><code>helm install my-release octokode/example-chart</code></pre>' >> index.html
            echo '    <h2>ðŸ”— Links</h2>' >> index.html
            echo '    <ul>' >> index.html
            echo '        <li><a href="https://github.com/OctoKode/helm-charts">GitHub Repository</a></li>' >> index.html
            echo '        <li><a href="https://github.com/OctoKode/helm-charts/releases">Releases</a></li>' >> index.html
            echo '    </ul>' >> index.html
            echo '</body>' >> index.html
            echo '</html>' >> index.html
            git add index.html
            git commit -m "Add index.html landing page" || true
            git push origin gh-pages
          fi
          
          # Return to the tag
          git checkout "${GITHUB_REF#refs/tags/}"
          
          # Update index and push to gh-pages
          mkdir -p .cr-index
          cr index -o "${{ github.repository_owner }}" -r "${{ github.event.repository.name }}" -c "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}" -i .cr-index/index.yaml --push
